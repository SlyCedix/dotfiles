#!/bin/bash

# Array of packages to install
packages=(
	"neovim"									# Text editor
	
	"fonts-hack-ttf"					# Main font
	"fonts-font-awesome"			# Glyph font

	"zsh"											# Shell Replacement

	"neofetch"								# System info fetcher

	"ranger"									# Ncurses file explorer

	"feh"											# Lightweight image viewer and background manager
	"w3m-img"									# Terminal image handler
	"imagemagick"							# CLI image editor

	"xcompmgr"								# Composite Manager

	"rofi"										# Dmenu replacement

	"git"
	"stow"
	"curl"
	
	# i3 Dependencies
	"make"
	"gcc"
	"libxcb1-dev"
	"libxcb-keysyms1-dev"
	"libpango1.0-dev"
	"libxcb-util0-dev"
	"libxcb-icccm4-dev"
	"libyajl-dev"
	"libstartup-notification0-dev"
	"libxcb-randr0-dev"
	"libev-dev"
	"libxcb-cursor-dev"
	"libxcb-xinerama0-dev"
	"libxcb-xkb-dev"
	"libxkbcommon-dev"
	"libxkbcommon-x11-dev"
	"autoconf"
	"libxcb-xrm0"
	"libxcb-xrm-dev"
	"automake"
	"xinit"

	# polybar Dependencies
	"python-xcbgen"
	"libxcb-ewmh-dev"
	"xcb-proto"
	"libxcb-image0-dev"
	"libcairo2-dev"
	"cmake"
	"cmake-data"
	"pkg-config"

	# Termite Dependencies
	"g++"
	"libgtk-3-dev"
	"gtk-doc-tools"
	"gnutls-bin"
	"valac"
	"intltool"
	"libpcre2-dev"
	"libglib3.0-cil-dev"
	"libgnutls28-dev"
	"libgirepository1.0-dev"
	"libxml2-utils"
	"gperf"
)

stows=(
	"i3--home"
	"neofetch--home"
	"nvim--home"
	"polybar--home"
	"ranger--home"
	"termite--home"
	"wallpapers--home"
	"x--home"
	"zsh--home"
	"bin--home"

	"apt--root"
)

# Ask for super user permissions
sudo -v

# Generate directories that need to be present prior to stow
mkdir ~/bin 2> /dev/null
mkdir ~/.config 2> /dev/null

# Remove stow conflicts
sudo rm -f /etc/apt/sources.list

for i in ${stows[@]}; do
	if [[ $(echo ${i} | grep "\--home") != "" ]]; then
		stow -d ~/dotfiles -t ~ ${i}
	elif [[ $(echo ${i} | grep "\--root") != "" ]]; then
		sudo stow -d ~/dotfiles -t / ${i}
	fi
done

# Remove default installed firefox and replace with quantum
if [[ $(dpkg-query -W --showformat='${Status}\n' "firefox" | grep "install ok installed") == "" ]]; then
	sudo apt update && sudo apt upgrade 2> /dev/null
	sudo apt remove firefox-esr && sudo apt install -t sid firefox 2> /dev/null
fi

for i in ${packages[@]}; do
	if [[ $(dpkg-query -W --showformat='${Status}\n' ${i} | grep "install ok installed") == "" ]]; then
		sudo apt -y install ${i}
	fi
done

mkdir ~/.temp
cd ~/.temp

if [[ ! -f "/usr/bin/i3" ]]; then
	git clone https://www.github.com/Airblader/i3 i3-gaps
	cd i3-gaps

	autoreconf --force --install
	rm -rf build/
	mkdir -p build && cd build/

	../configure --prefix=/usr --sysconfdir=/etc --disable-sanitizers
	make
	sudo make install
	cd ~/.temp
fi

if [[ ! -f "/usr/local/bin/polybar" ]]; then
	git clone --recursive https://github.com/jaagr/polybar
	mkdir polybar/build
	cd polybar/build
	cmake ..
	sudo make install
	cd ~/.temp
fi

if [[ ! -f "/usr/local/bin/termite" ]]; then
	git clone --recursive https://github.com/thestinger/termite.git
	git clone https://github.com/thestinger/vte-ng.git
	echo export LIBRARY_PATH="/usr/include/gtk-3.0:$LIBRARY_PATH"
	cd vte-ng && ./autogen.sh && make && sudo make install
	cd ../termite && make && sudo make install
	sudo ldconfig
	sudo mkdir -p /lib/terminfo/x; sudo ln -s \
		/usr/local/share/terminfo/x/xterm-termite \
		/lib/terminfo/x/xterm-termite
	sudo update-alternatives --install /usr/bin/x-terminal-emulator x-terminal-emulator /usr/local/bin/termite 60
	cd ~/.temp
fi

curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim \
		2> /dev/null

sudo chsh -s /bin/zsh $(whoami)

rm ~/.bash* 2> /dev/null

if [[ ! -d ~/.oh-my-zsh ]]; then
	sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
fi

# Cleanup
rm -rf ~/.temp
sudo apt autoremove
